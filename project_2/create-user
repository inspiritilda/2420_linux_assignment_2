#!/bin/bash

# This script will create a new user with a specified shell, home directory, groups, and set their password.
# It directly writes to the necessary files and doesn't use any user management tools.

# Check if running as root
if [[ $EUID -ne 0 ]]; then
	echo "This script must be run as root."
	exit 1
fi

CONFIG_FILE="./user-defaults"
shell="/bin/bash"
groups=""

if [[ -f "$CONFIG_FILE" ]]; then
	source "$CONFIG_FILE"
fi

# Ask for the username
read -p "Enter the username: " username

# Checj if the user already exists
if id "$username" &>/dev/null; then
    echo "Error: User '$username' already exists."
    exit 1
fi

# Ask for the shell
read -p "Enter the shell (default /bin/bash): " input_shell
shell=${input_shell:-$shell}

# Ask for additional groups
read -p "Enter additional groups (default: $groups): " input_groups
groups=${input_groups:-$groups}

# Check if group already exists, if not create group
if ! grep -q "^${username}:" /etc/group; then
	groupadd "$username"
	echo "Group '$username' created successfully."
else
	echo "Group '$username' already exists."
fi

# Create the user with the specified shell, primary group, and home directory
if useradd -m -s "$shell" -g "$username" -G "$groups" "$username"; then
    echo "User '$username' created successfully."
else
    echo "Failed to create user '$username'."
    exit 1
fi

# Set the password
while true; do
    read -s -p "Enter password for $username: " password
    echo
    read -s -p "Confirm password for $username: " password2
    echo
    if [[ "$password" == "$password2" ]]; then
        echo "$username:$password" | chpasswd
        chown -R "$username:$username" "/home/$username"
        echo "Password set successfully for user '$username'."
        break
    else
        echo "Passwords do not match. Please try again."
    fi
done
